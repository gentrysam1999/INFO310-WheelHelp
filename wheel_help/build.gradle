plugins {
   id 'application'
   id 'jacoco'
}

repositories {
   jcenter()
	mavenCentral()
}

dependencies {
   def junitVer = '5.6.2'
	//imp0lementation grou:
	//?https://mvnrepository.com/artifact/net.sf.oval/oval
compile group: 'net.sf.oval', name: 'oval', version: '2.1.6'
testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.+'
testImplementation group: 'org.assertj', name: 'assertj-swing-junit', version: '3.+'
	implementation group: 'com.h2database', name: 'h2', version: '1.4.200'
   implementation group: 'com.google.guava', name: 'guava', version: '29.0-jre'
   testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVer
   testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVer
   testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
   testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
	def joobyVer = '1.6.+'
implementation group: 'org.jooby', name: 'jooby-netty', version: joobyVer
implementation group: 'org.jooby', name: 'jooby-gson', version: joobyVer
   
}

test {
   useJUnitPlatform()
}

tasks.test {
    useJUnitPlatform()
}

run {
   standardInput = System.in
}

mainClassName = 'WebModules.Server'


task createMissingSourceDirs {
   group = "Source Directories"
   description = "Create all of the missing source directories for this project."
   doFirst {
      sourceSets.each { def sourceRoot ->
         sourceRoot.allSource.srcDirTrees.each { def sourceDir ->
            if(!sourceDir.dir.exists()) {
               println "Creating ${sourceDir}"
               mkdir sourceDir.dir
            }
         }
      }
   }
}
 
task deleteEmptySourceDirs {
   group = "Source Directories"
   description = "Delete all empty source directories."
   doFirst {
      sourceSets.each { def sourceRoot ->
         sourceRoot.allSource.srcDirTrees.each { def sourceDir ->
            if(sourceDir.dir.exists() && sourceDir.dir.isDirectory() && sourceDir.dir.list().length == 0) {
               println "Removing empty ${sourceDir}"
               sourceDir.dir.delete()
            }
         }
      }
   }
}

sourceSets {
   web {
      resources {
         srcDirs = ['public']
      }
      java {
         srcDirs = []
      }
   }
}